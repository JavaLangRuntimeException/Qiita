name: Publish and Sync Qiita Articles

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # 毎日 UTC 0:00 (= JST 9:00) に実行

permissions:
  contents: write

jobs:
  # 最初に matrix 用のブランチ一覧をセットアップするジョブ
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Set matrix for current event
        id: set_matrix
        uses: actions/github-script@v6
        with:
          script: |
            let matrix;
            if (context.eventName === 'pull_request') {
              // pull_request イベントの場合は、該当のPRの head ブランチのみ
              matrix = { include: [ { branch: context.payload.pull_request.head.ref } ] };
            } else {
              // schedule イベントの場合は、open状態かつ base==main のPRを全て取得
              const { data: pullRequests } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
              });
              const filtered = pullRequests.filter(pr => pr.base.ref === "main");
              matrix = { include: filtered.map(pr => ({ branch: pr.head.ref })) };
            }
            return { matrix: JSON.stringify(matrix) };

  update-frontmatter:
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (branch: ${{ matrix.branch }})
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.0"
      - name: Install dependencies
        run: npm install
      - name: Update Markdown frontmatter
        run: node scripts/update_frontmatter.js
      - name: Commit and push updated frontmatter
        env:
          COMMIT_MESSAGE: "Frontmatter update by qiita_sync[bot]"
        run: |
          git add .
          if ! git diff --cached --exit-code; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            echo "=== 差分 ==="
            git diff --color || true
            echo "=== コミット実行 ==="
            git commit -m "${COMMIT_MESSAGE}"
            git push origin HEAD:${{ matrix.branch }}
          else
            echo "コミットする差分はありません。"
          fi
        shell: bash

  qiita-sync:
    needs: update-frontmatter
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (branch: ${{ matrix.branch }})
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.0"
      - name: Install dependencies
        run: npm install
      - name: Run Qiita API sync
        env:
          QIITA_TOKEN: ${{ secrets.QIITA_TOKEN }}
        run: node scripts/qiita_sync.js
      - name: Commit and push changes from qiita_sync.js
        env:
          COMMIT_MESSAGE: "Qiita sync update by qiita_sync[bot]"
        run: |
          git add .
          if ! git diff --cached --exit-code; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            echo "=== 差分 ==="
            git diff --color || true
            echo "=== コミット実行 ==="
            git commit -m "${COMMIT_MESSAGE}"
            git push origin HEAD:${{ matrix.branch }}
          else
            echo "コミットする差分はありません。"
          fi
        shell: bash