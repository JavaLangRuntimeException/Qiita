name: Publish and Sync Qiita Articles

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # 毎日 UTC 0:00 (= JST 9:00) に実行

permissions:
  contents: write

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    # ここで下の steps.set_matrix.outputs.result を matrix として公開
    outputs:
      matrix: ${{ steps.set_matrix.outputs.result }}
    steps:
      - name: Set matrix for current event
        id: set_matrix
        uses: actions/github-script@v6
        with:
          script: |
            let matrix;
            if (context.eventName === 'pull_request') {
              // PR のときは head ブランチだけ
              matrix = { include: [ { branch: github.head_ref } ] };
              console.log('PR event detected, using head_ref:', github.head_ref);
            } else {
              // schedule のときは単純にmainブランチを使用
              matrix = { include: [ { branch: 'main' } ] };
              console.log('Schedule event detected, using main branch');
            }

            // 明示的に結果を設定
            console.log('Final matrix data:', JSON.stringify(matrix));
            core.setOutput('result', JSON.stringify(matrix));
            return matrix;

  update-frontmatter:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      # ここで文字列化されたJSONをパース
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}

    # マトリックスの値が空の場合はスキップ
    if: ${{ fromJson(needs.setup-matrix.outputs.matrix).include[0] }}
    steps:
      - name: 'Checkout repository (branch: ${{ matrix.branch }})'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Update frontmatter
        run: node scripts/update_frontmatter.js

      - name: Commit & Push frontmatter
        env:
          COMMIT_MSG: "Frontmatter update by qiita_sync[bot]"
        run: |
          git add .
          if ! git diff --cached --exit-code; then
            git config user.name 'github-actions[bot]'
            git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git commit -m "${COMMIT_MSG}"
            git push origin HEAD:${{ matrix.branch }}
          else
            echo "No changes to commit"
          fi

  qiita-sync:
    needs: update-frontmatter
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}

    # マトリックスの値が空の場合はスキップ
    if: ${{ fromJson(needs.setup-matrix.outputs.matrix).include[0] }}
    steps:
      - name: 'Checkout repository (branch: ${{ matrix.branch }})'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run Qiita sync
        env:
          QIITA_TOKEN: ${{ secrets.QIITA_TOKEN }}
        run: node scripts/qiita_sync.js

      - name: Commit & Push Qiita sync changes
        env:
          COMMIT_MSG: "Qiita sync update by qiita_sync[bot]"
        run: |
          git add .
          if ! git diff --cached --exit-code; then
            git config user.name 'github-actions[bot]'
            git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git commit -m "${COMMIT_MSG}"
            git push origin HEAD:${{ matrix.branch }}
          else
            echo "No changes to commit"
          fi
